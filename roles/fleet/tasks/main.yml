---
- user: name=core system=yes home=/home/core shell=/bin/bash comment="CoreOS Admin"

- name: enable sudo for core user
  copy: src=coresudo dest=/etc/sudoers.d/coresudo mode=0440 owner=root group=root 

- name: copy over your .ssh/authorized_keys
  authorized_key: user=core
    key="{{ lookup('file', '~/.ssh/id_core_rsa.pub') }}"
    manage_dir=no

- name: check if fleet {{ fleet.version }} is already at {{ fleet.clone }}/bin/fleet
  stat: path={{ fleet.clone }}/bin/fleetd
  register: fleet_result

- name: clone fleet {{ fleet.version }}
  git: repo={{ fleet.repo }}
     dest={{ fleet.clone }}
     version={{ fleet.version }}
  register: fleet_cloned_done
  when: fleet_result.stat.exists == false

- name: build fleet {{ fleet.version }} from {{  fleet.repo }}
  command: chdir={{ fleet.clone }} ./build
  when: fleet_result.stat.exists == false and fleet_cloned_done|success

- name: Creates directory /etc/fleet
  file: path=/etc/fleet state=directory

- name: place fleet.conf.j2 into /etc/fleet/fleet.conf
  template: src=fleet.conf.j2 dest=/etc/fleet/fleet.conf mode=0644

- name: upload systemd fleet.*
  copy: src={{ item }} dest=/etc/systemd/system/{{ item }} mode=0644 owner=root group=root 
  with_items:
    - fleet.socket
    - fleet.service

- name: link fleetctl to /usr/local/bin/fleetctl
  file: src=/srv/fleet-src/bin/fleetctl  dest=/usr/local/bin/fleetctl state=link

- name: link fleetd to /usr/local/sbin/fleetd
  file: src=/srv/fleet-src/bin/fleetd  dest=/usr/local/bin/fleetd state=link

- name: start the fleetd.service
  service: name=fleet enabled=yes state=started

- name: render /etc/environment
  template: src=environment.j2 dest=/etc/environment mode=0644
